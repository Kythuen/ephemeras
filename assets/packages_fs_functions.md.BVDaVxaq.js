import{d as k,o as r,c as o,j as i,t as l,F as d,C as g,e as c,_ as y,a as E,G as a,ae as e}from"./chunks/framework.UQ5cKqIc.js";const u={class:"function-block"},m={style:{padding:"0"}},F=["href"],b={key:1},C=["href"],f=k({name:"FunctionBlock",__name:"FunctionBlock",props:{options:{type:Object,required:!0}},setup(p){return(s,n)=>(r(),o("div",u,[i("table",null,[n[5]||(n[5]=i("colgroup",null,[i("col",{style:{width:"20%"}}),i("col",{style:{width:"80%"}})],-1)),i("tbody",null,[i("tr",null,[n[0]||(n[0]=i("td",null,"Description",-1)),i("td",null,l(p.options.desc),1)]),i("tr",null,[n[1]||(n[1]=i("td",null,"Types",-1)),i("td",null,[i("code",null,l(p.options.type),1)])]),i("tr",null,[n[3]||(n[3]=i("td",null,"Parameters",-1)),i("td",m,[i("table",null,[n[2]||(n[2]=i("colgroup",null,[i("col",{style:{width:"15%"}}),i("col",{style:{width:"85%"}})],-1)),i("tbody",null,[(r(!0),o(d,null,g(p.options.params||[],h=>(r(),o("tr",{key:h.name},[i("td",null,[h.url?(r(),o("a",{key:0,href:h.url,target:"_blank"},l(h.name),9,F)):(r(),o("span",b,l(h.name),1))]),i("td",null,l(h.desc),1)]))),128))])])])]),i("tr",null,[n[4]||(n[4]=i("td",null,"Returns",-1)),i("td",null,[i("span",null,l(p.options.returns),1),p.options.resultType?(r(),o("a",{key:0,m:"l-1",href:p.options.resultType.url,target:"_blank"},[i("code",null,l(p.options.resultType.name),1)],8,C)):c("",!0)])])])])]))}}),O=JSON.parse('{"title":"Functions","description":"Functions list follows.","frontmatter":{"title":"Functions","description":"Functions list follows."},"headers":[],"relativePath":"packages/fs/functions.md","filePath":"packages/fs/functions.md"}'),v={name:"packages/fs/functions.md"};function D(p,s,n,h,B,x){const t=f;return r(),o("div",null,[s[0]||(s[0]=i("h3",{id:"unixpath",tabindex:"-1"},[E("unixPath "),i("a",{class:"header-anchor",href:"#unixpath","aria-label":'Permalink to "unixPath"'},"​")],-1)),a(t,{options:{desc:"Determine path exists or not.",type:"(path: string): string",params:[{name:"path",type:"string",desc:"The path you want to determine."},{name:"path",type:"string",desc:"The path you want to determine."}],returns:"Unix format path."}}),s[1]||(s[1]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unixPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc/ab/c&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; &#39;abc/ab/c&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unixPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; &#39;abc/ab/c&#39;</span></span></code></pre></div><h3 id="relativepath" tabindex="-1">relativePath <a class="header-anchor" href="#relativepath" aria-label="Permalink to &quot;relativePath&quot;">​</a></h3>`,2)),a(t,{options:{desc:"Get relative path from base path.",type:"(path: string, base?: string): string",params:[{name:"path",type:"string",desc:"Source path."},{name:"base",type:"string",desc:"Base path."}],returns:"Relative path from base."}}),s[2]||(s[2]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relativePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/abc/b/1.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/abc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; &#39;b/1.txt&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relativePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/abc/b/1.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; &#39;1.txt&#39;</span></span></code></pre></div><h3 id="getleafs" tabindex="-1">getLeafs <a class="header-anchor" href="#getleafs" aria-label="Permalink to &quot;getLeafs&quot;">​</a></h3>`,2)),a(t,{options:{desc:"Get leaf items of directory.",type:"(path: string, options?: Partial<GetLeafsOptions>): string[]",params:[{name:"path",type:"string",desc:"Source path."},{name:"options",type:"GetLeafsOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/common.ts#L41"}],returns:"Leaf items list of the directory."}}),s[3]||(s[3]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLeafs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; [&#39;/xxx&#39;, &#39;1.txt&#39;, &#39;sub1/1.txt&#39;, ...]</span></span></code></pre></div><h3 id="stat" tabindex="-1">stat <a class="header-anchor" href="#stat" aria-label="Permalink to &quot;stat&quot;">​</a></h3>',2)),a(t,{options:{desc:"Get path stat information.",type:"(path: string, options?: Partial<StatOptions>): Promise<Stats>",params:[{name:"path",type:"string",desc:"Path to check."},{name:"options",type:"StatOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/stat.ts#L6"}],returns:"Stat info of path."}}),s[4]||(s[4]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; false</span></span></code></pre></div><h3 id="exist" tabindex="-1">exist <a class="header-anchor" href="#exist" aria-label="Permalink to &quot;exist&quot;">​</a></h3>',2)),a(t,{options:{desc:"Determine path exist or not.",type:"(path: string): Promise<boolean>",params:[{name:"path",type:"string",desc:"Path to determine."}],returns:"Path exist or not."}}),s[5]||(s[5]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> exist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//--&gt; false</span></span></code></pre></div><h3 id="ensuredir" tabindex="-1">ensureDir <a class="header-anchor" href="#ensuredir" aria-label="Permalink to &quot;ensureDir&quot;">​</a></h3>',2)),a(t,{options:{desc:"Create directory if not existing.",type:"(path: string, options?: Partial<EnsureDirOptions>): Promise<boolean>",params:[{name:"path",type:"string",desc:"Directory path."},{name:"options",type:"EnsureDirOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/ensure.ts#L7"}],returns:"Result of operation."}}),s[6]||(s[6]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ensureDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="ensurefile" tabindex="-1">ensureFile <a class="header-anchor" href="#ensurefile" aria-label="Permalink to &quot;ensureFile&quot;">​</a></h3>',2)),a(t,{options:{desc:"Create file if not existing.",type:"(path: string, content?: string, options?: Partial<EnsureFileOptions>): Promise<boolean>",params:[{name:"path",type:"string",desc:"File path."},{name:"content",type:"string",desc:"Default content when create not exist file."},{name:"options",type:"EnsureFileOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/ensure.ts#L33"}],returns:"Result of operation."}}),s[7]||(s[7]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ensureFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }))</span></span></code></pre></div><h3 id="readjson" tabindex="-1">readJSON <a class="header-anchor" href="#readjson" aria-label="Permalink to &quot;readJSON&quot;">​</a></h3>',2)),a(t,{options:{desc:"Read a JSON file.",type:"(path: string): Promise<Record<string, any>>",params:[{name:"path",type:"string",desc:"JSON file path."}],returns:"JSON file data."}}),s[8]||(s[8]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> readJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc/ab.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="createfile" tabindex="-1">createFile <a class="header-anchor" href="#createfile" aria-label="Permalink to &quot;createFile&quot;">​</a></h3>',2)),a(t,{options:{desc:"Create file with content.",type:"(path: string, content?: string, options?: Partial<CreateFileOptions>): Promise<boolean>",params:[{name:"path",type:"string",desc:"File path."},{name:"content",type:"string",desc:"File content."},{name:"options",type:"CreateFileOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/create.ts#L9"}],returns:"Created file path."}}),s[9]||(s[9]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/bar.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({}))</span></span></code></pre></div><h3 id="createdir" tabindex="-1">createDir <a class="header-anchor" href="#createdir" aria-label="Permalink to &quot;createDir&quot;">​</a></h3>',2)),a(t,{options:{desc:"Create directory.",type:"(path: string, options?: Partial<CreateDirOptions>): Promise<boolean>",params:[{name:"path",type:"string",desc:"Directory path."},{name:"options",type:"CreateFileOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/create.ts#L60"}],returns:"Created directory path."}}),s[10]||(s[10]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="copyfile" tabindex="-1">copyFile <a class="header-anchor" href="#copyfile" aria-label="Permalink to &quot;copyFile&quot;">​</a></h3>',2)),a(t,{options:{desc:"Copy file.",type:"(src: string, dest: string, options?: Partial<CopyFileOptions>): Promise<boolean>",params:[{name:"src",type:"string",desc:"Source file path."},{name:"dest",type:"string",desc:"Destination file path."},{name:"options",type:"CopyFileOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/copy.ts#L17"}],returns:"Result of operation."}}),s[11]||(s[11]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/bar.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/baz.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="copydir" tabindex="-1">copyDir <a class="header-anchor" href="#copydir" aria-label="Permalink to &quot;copyDir&quot;">​</a></h3>',2)),a(t,{options:{desc:"Copy directory.",type:"(src: string, dest: string, options?: Partial<CopyDirOptions>): Promise<CopyDirResult>",params:[{name:"src",type:"string",desc:"Source directory path."},{name:"dest",type:"string",desc:"Destination directory path."},{name:"options",type:"CopyDirOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/copy.ts#L58"}],returns:"Result of operation.",resultType:{name:"CopyDirResult",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/copy.ts#L62"}}}),s[12]||(s[12]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copyDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/baz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="movefile" tabindex="-1">moveFile <a class="header-anchor" href="#movefile" aria-label="Permalink to &quot;moveFile&quot;">​</a></h3>',2)),a(t,{options:{desc:"Move file.",type:"(src: string, dest: string, options?: Partial<MoveFileOptions>): Promise<boolean>",params:[{name:"src",type:"string",desc:"Source file path."},{name:"dest",type:"string",desc:"Destination file path."},{name:"options",type:"MoveFileOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/move.ts#L20"}],returns:"Result of operation."}}),s[13]||(s[13]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="movedir" tabindex="-1">moveDir <a class="header-anchor" href="#movedir" aria-label="Permalink to &quot;moveDir&quot;">​</a></h3>',2)),a(t,{options:{desc:"Move directory.",type:"(src: string, dest: string, options?: Partial<MoveDirOptions>): Promise<MoveDirResult>",params:[{name:"src",type:"string",desc:"Source directory path."},{name:"dest",type:"string",desc:"Destination directory path."},{name:"options",type:"MoveDirOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/move.ts#L72"}],returns:"Result of operation.",resultType:{name:"MoveDirResult",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/move.ts#L76"}}}),s[14]||(s[14]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/baz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="emptydir" tabindex="-1">emptyDir <a class="header-anchor" href="#emptydir" aria-label="Permalink to &quot;emptyDir&quot;">​</a></h3>',2)),a(t,{options:{desc:"Empty directory.",type:"(path: string, options?: Partial<EmptyDirOptions>): Promise<EmptyDirResult>",params:[{name:"path",type:"string",desc:"Directory path."},{name:"options",type:"EmptyDirOptions",desc:"Options of operation.",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/empty.ts#L13"}],returns:"Result of operation.",resultType:{name:"EmptyDirResult",url:"https://github.com/Kythuen/ephemeras/blob/main/packages/fs/src/empty.ts#L14"}}}),s[15]||(s[15]=e('<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">done</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo/bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>',1))])}const A=y(v,[["render",D]]);export{O as __pageData,A as default};
